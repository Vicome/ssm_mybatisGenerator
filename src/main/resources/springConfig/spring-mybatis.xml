<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 自动扫描 -->
    <context:component-scan base-package="vic" />

    <!-- 引入配置文件 -->
    <!--<bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:mybatis/jdbc.properties" />
    </bean>-->
    <context:property-placeholder location="classpath:mybatis/jdbc.properties"/>

    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!--基本配置-->
        <property name="driverClass" value="${jdbc.driverClass}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!--高级配置-->
        <!-- 初始化连接大小 -->
        <property name="initialPoolSize" value="${initialSize}"/>
        <!-- 连接池最大数量 -->
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <!-- 连接池最小数量 -->
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <!--当获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    </bean>

    <!--配置sqlSessionFactory对象-->
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource" />
        <!--扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="${package.model}"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:${mapping.xml}"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="vic.mybatis.mapper" />
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 配置事务通知 -->
    <!--<tx:advice transaction-manager="txManager" id="txAdvice">
        <tx:attributes>
            <tx:method name="register*"/>
            <tx:method name="save*"/>
            <tx:method name="update*"/>
            <tx:method name="delete*"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="login*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>-->

    <!-- 配置aop增强处理 -->
    <!--<aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.mengfei.biz.*.*(..))"/>
    </aop:config>-->

</beans>