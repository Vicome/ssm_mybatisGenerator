plugins {
    id 'java'
    id 'war'
}

group 'com.vic.course'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    mybatisGenerator
}

dependencies {
    // junit 4
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // spring依赖
    compile 'org.springframework:spring-webmvc:5.1.1.RELEASE'

    compile group: 'org.springframework', name: 'spring-core', version: '5.1.1.RELEASE'
    compile 'org.springframework:spring-beans:5.1.1.RELEASE'
    compile 'org.springframework:spring-context:5.1.1.RELEASE'
    compile 'org.springframework:spring-web:5.1.1.RELEASE'
    compile 'org.springframework:spring-tx:5.1.1.RELEASE'
    compile 'org.springframework:spring-context-support:5.1.1.RELEASE'
    compile 'org.springframework:spring-jdbc:5.1.1.RELEASE'
    compile 'org.springframework:spring-test:5.1.1.RELEASE'

    // spring依赖日志包
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

    // string 增强
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    // 集合增强
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
    // 上传组件
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    // JavaEE servlet
    compile group: 'javax', name: 'javaee-api', version: '7.0'

    // mybatis依赖
    compile 'org.mybatis:mybatis:3.4.6'
    // mybatis-spring整合
    compile 'org.mybatis:mybatis-spring:1.3.2'

    // mysql-connector驱动依赖
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'
    // c3p0数据库连接池
    compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.2'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    // mybatis逆向
//    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.7'
//    compile group: 'tk.mybatis', name: 'mapper', version: '4.0.4'


    // mybatis-generator mybatis逆向生成代码
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.7'
    mybatisGenerator 'mysql:mysql-connector-java:8.0.12'
    mybatisGenerator 'tk.mybatis:mapper:4.0.4'

}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/mybatis/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerator {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClass")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}
